class Solution {
public:
    vector<int> eventualSafeNodes(int V, vector<int> adj[])
    {
        vector<int> adjrev[V];

        for (int i = 0; i < V; ++i) {
            for (auto it : adj[i]) {
                adjrev[it].push_back(i);
            }
        }
        vector<int> indeg(V, 0);
        for (int i = 0; i < V; ++i) {
            for (auto it : adjrev[i]) {
                indeg[it]++;
            }
        }
        queue<int> q;
        vector<int> ans;

        for (int i = 0; i < V; ++i) {
            if (indeg[i] == 0) {
                q.push(i);
            }
        }
        while (!q.empty()) {
            int x = q.front();
            q.pop();
            ans.push_back(x);
            for (auto it : adjrev[x]) {
                indeg[it]--;
                if (indeg[it] == 0)
                    q.push(it);
            }
        }
        sort(ans.begin(), ans.end());
        return ans;
       
    }
};
