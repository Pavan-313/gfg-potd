class Solution {

    // Function to find the better string among the two input strings
    public static String betterString(String str1, String str2) {
        // Count the number of substrings of each string
        int a = countSub(str1);
        int b = countSub(str2);
        
        // Return the string with more substrings
        if (a < b) {
            return str2;
        }
        return str1;
    }
    
    // Function to count the number of substrings in a string
    static int countSub(String str) {
        // Initialize an array to store the last occurrence of characters
        int[] last = new int[256];
        Arrays.fill(last, -1);
        
        // Initialize an array to store the number of substrings
        int n = str.length();
        int[] dp = new int[n + 1];

        dp[0] = 1;
        for (int i = 1; i <= n; i++) {
            // Calculate the number of substrings using dynamic programming
            dp[i] = 2 * dp[i - 1];

            if (last[str.charAt(i - 1)] != -1) {
                dp[i] = dp[i] - dp[last[str.charAt(i - 1)]];
            }
            last[str.charAt(i - 1)] = (i - 1);
        }
        return dp[n];
    }
}
