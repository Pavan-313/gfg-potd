class Solution {
public:
    int knapSack(int N, int W, int val[], int wt[])
    {
        vector<vector<int> > dp(N, vector<int>(W + 1, 0));

        for (int i = wt[0]; i <= W; i++) {
            dp[0][i] = (i / wt[0]) * val[0];
        }

        for (int i = 1; i < N; i++) {
            for (int j = 0; j <= W; j++) {
                int notTaken = 0 + dp[i - 1][j];

                int taken = INT_MIN;
                if (wt[i] <= j)
                    taken = val[i] + dp[i][j - wt[i]];

                dp[i][j] = max(notTaken, taken);
            }
        }

        return dp[N - 1][W];
    }
};
